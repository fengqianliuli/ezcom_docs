<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="exception_8h" kind="file" language="C++">
    <compoundname>exception.h</compoundname>
    <includes local="no">stdexcept</includes>
    <incdepgraph>
      <node id="2">
        <label>stdexcept</label>
      </node>
      <node id="1">
        <label>include/ezcom/exception.h</label>
        <link refid="exception_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classholosar_1_1ezcom_1_1Exception" prot="public">holosar::ezcom::Exception</innerclass>
    <innerclass refid="classholosar_1_1ezcom_1_1InvalidParamException" prot="public">holosar::ezcom::InvalidParamException</innerclass>
    <innerclass refid="classholosar_1_1ezcom_1_1ResourceException" prot="public">holosar::ezcom::ResourceException</innerclass>
    <innerclass refid="classholosar_1_1ezcom_1_1AlreadyDoneException" prot="public">holosar::ezcom::AlreadyDoneException</innerclass>
    <innernamespace refid="namespaceholosar">holosar</innernamespace>
    <innernamespace refid="namespaceholosar_1_1ezcom">holosar::ezcom</innernamespace>
    <briefdescription>
<para>declare the exception class </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>haotian.shi (<ulink url="mailto:shihaotian@holomatic.com">shihaotian@holomatic.com</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.2.0 </para>
</simplesect>
<simplesect kind="date"><para>2023-07-18</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2023 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">holosar<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ezcom<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classholosar_1_1ezcom_1_1Exception" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classholosar_1_1ezcom_1_1Exception" kindref="compound">Exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="classholosar_1_1ezcom_1_1Exception" kindref="compound">Exception</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg)<sp/>:<sp/>std::runtime_error(msg)<sp/>{}</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classholosar_1_1ezcom_1_1InvalidParamException" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classholosar_1_1ezcom_1_1InvalidParamException" kindref="compound">InvalidParamException</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classholosar_1_1ezcom_1_1Exception" kindref="compound">Exception</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="classholosar_1_1ezcom_1_1InvalidParamException" kindref="compound">InvalidParamException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg)<sp/>:<sp/><ref refid="classholosar_1_1ezcom_1_1Exception" kindref="compound">Exception</ref>(msg)<sp/>{}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classholosar_1_1ezcom_1_1ResourceException" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classholosar_1_1ezcom_1_1ResourceException" kindref="compound">ResourceException</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classholosar_1_1ezcom_1_1Exception" kindref="compound">Exception</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="classholosar_1_1ezcom_1_1ResourceException" kindref="compound">ResourceException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg)<sp/>:<sp/><ref refid="classholosar_1_1ezcom_1_1Exception" kindref="compound">Exception</ref>(msg)<sp/>{}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classholosar_1_1ezcom_1_1AlreadyDoneException" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classholosar_1_1ezcom_1_1AlreadyDoneException" kindref="compound">AlreadyDoneException</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classholosar_1_1ezcom_1_1Exception" kindref="compound">Exception</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="classholosar_1_1ezcom_1_1AlreadyDoneException" kindref="compound">AlreadyDoneException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg)<sp/>:<sp/><ref refid="classholosar_1_1ezcom_1_1Exception" kindref="compound">Exception</ref>(msg)<sp/>{}</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ezcom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>holosar</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/ezcom/exception.h"/>
  </compounddef>
</doxygen>
