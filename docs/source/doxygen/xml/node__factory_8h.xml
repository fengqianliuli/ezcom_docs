<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="node__factory_8h" kind="file" language="C++">
    <compoundname>node_factory.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">vector</includes>
    <includes refid="client_8h" local="yes">client.h</includes>
    <includes refid="publisher_8h" local="yes">publisher.h</includes>
    <includes refid="server_8h" local="yes">server.h</includes>
    <includes refid="subscriber_8h" local="yes">subscriber.h</includes>
    <incdepgraph>
      <node id="5">
        <label>functional</label>
      </node>
      <node id="10">
        <label>publisher.h</label>
        <link refid="publisher_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>client.h</label>
        <link refid="client_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>message.h</label>
        <link refid="message_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>types.h</label>
        <link refid="types_8h"/>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="11">
        <label>server.h</label>
        <link refid="server_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>subscriber.h</label>
        <link refid="subscriber_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="8">
        <label>node.h</label>
        <link refid="node_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/ezcom/node_factory.h</label>
        <link refid="node__factory_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="classholosar_1_1ezcom_1_1NodeFactory" prot="public">holosar::ezcom::NodeFactory</innerclass>
    <innernamespace refid="namespaceholosar">holosar</innernamespace>
    <innernamespace refid="namespaceholosar_1_1ezcom">holosar::ezcom</innernamespace>
    <briefdescription>
<para>node factory to create node </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>haotian.shi (<ulink url="mailto:shihaotian@holomatic.com">shihaotian@holomatic.com</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.2.0 </para>
</simplesect>
<simplesect kind="date"><para>2023-07-18</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2023 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="client_8h" kindref="compound">client.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="publisher_8h" kindref="compound">publisher.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="server_8h" kindref="compound">server.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="subscriber_8h" kindref="compound">subscriber.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">holosar<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ezcom<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classholosar_1_1ezcom_1_1NodeFactory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classholosar_1_1ezcom_1_1NodeFactory" kindref="compound">NodeFactory</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Client&gt;<sp/><ref refid="classholosar_1_1ezcom_1_1NodeFactory_1aef2ee7c83353c3dfd35ab1a5382ebecd" kindref="member">CreateClient</ref>(</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a5ea0994336f06c9c480552a814f3068c" kindref="member">TransportType</ref>&amp;<sp/>transport_type);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Server&gt;<sp/><ref refid="classholosar_1_1ezcom_1_1NodeFactory_1a95895805e11291e87f81f532bdb5bf0f" kindref="member">CreateServer</ref>(</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a5ea0994336f06c9c480552a814f3068c" kindref="member">TransportType</ref>&amp;<sp/>transport_type);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>inproc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>void<sp/>CreateZmqInprocNodes(int<sp/>node_num,<sp/>std::unique_ptr&lt;Server&gt;*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>server,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr&lt;Client&gt;*&gt;&amp;<sp/>clients);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Publisher&gt;<sp/><ref refid="classholosar_1_1ezcom_1_1NodeFactory_1ac5123f27f62b611e6201a1e42ed5ae81" kindref="member">CreatePublisher</ref>(</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a5ea0994336f06c9c480552a814f3068c" kindref="member">TransportType</ref>&amp;<sp/>transport_type);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Subscriber&gt;<sp/><ref refid="classholosar_1_1ezcom_1_1NodeFactory_1a02cf5b587618230807bb8968bc8477ff" kindref="member">CreateSubscriber</ref>(</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a5ea0994336f06c9c480552a814f3068c" kindref="member">TransportType</ref>&amp;<sp/>transport_type);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>inproc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>static<sp/>void<sp/>CreateZmqInprocNodes(int<sp/>node_num,<sp/>std::unique_ptr&lt;Pub&gt;*<sp/>pub,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr&lt;Sub&gt;*&gt;&amp;<sp/>subs);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Node&gt;<sp/>CreateNode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a2f0b33e8bad23d94460d71485799a19b" kindref="member">NodeType</ref>&amp;<sp/>node_type,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8h_1aec1f5efcf125a58797b22c131a61f319" kindref="member">CommMode</ref>&amp;<sp/>comm_mode,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a5ea0994336f06c9c480552a814f3068c" kindref="member">TransportType</ref>&amp;<sp/>transport_type);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::unique_ptr&lt;Node&gt;&gt;<sp/>CreateZmqInprocNode(</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8h_1aec1f5efcf125a58797b22c131a61f319" kindref="member">CommMode</ref>&amp;<sp/>comm_mode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_num);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ezcom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>holosar</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/ezcom/node_factory.h"/>
  </compounddef>
</doxygen>
